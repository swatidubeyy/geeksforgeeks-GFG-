// source page --->>>> https://practice.geeksforgeeks.org/problems/reverse-level-order-traversal/1/


class Tree
{
    public ArrayList<Integer> reverseLevelOrder(Node node) 
    {
        Stack<Integer> st = new Stack<>();
        Queue<Node> mq = new LinkedList<>();
        ArrayList<Integer> al = new ArrayList<>();
        
        mq.add(node);
        
        while(mq.size() > 0){
            Node temp = mq.remove();
            if(temp != null){
                st.push(temp.data);
                
                if(temp.right != null){
                    mq.add(temp.right);
                }
                
                if(temp.left != null){
                    mq.add(temp.left);
                }    
            }
        }
        
        while(st.size() > 0){
            int val = st.pop();
            al.add(val);
        }
        return al;
    }
}      
